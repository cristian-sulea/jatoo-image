	-----
	${project.description}
	-----
	Cristian Sulea
	-----


Tutorial


* Read
	
	Easy to read and decode images from various sources, handling also the "null" response (throwing exception). 

+--
BufferedImage image1 = ImageUtils.read(new File("image1.jpg"));

BufferedImage image2 = ImageUtils.read(new URL("http://cristian.sulea.net/projects/jatoo-image/images/logo.png"));
+--


* Write
	
	Custom methods for various formats.

+--
BufferedImage image = ImageUtils.read(new File("image.jpg"));

ImageUtils.writeGIF(image, new File("image2.gif"));
ImageUtils.writeJPEG(image, new File("image2.jpg"));
ImageUtils.writePNG(image, new File("image2.png"));
+--

	For JPEG images specifying the compression is just a new parameter (percentage).

+--
ImageUtils.writeJPEG(image, new File("image2.jpg"), 75);
+--


* Resize
	
	Resizes an image (keeping the original ratio) to fit inside a rectangle with the specified size.

+--
BufferedImage image = ImageUtils.read(new File("image.jpg"));
BufferedImage imageResized = ImageUtils.resizeToFit(IMAGE, 300, 300);
+--

	Resizes an image (keeping the original ratio) to fill a rectangle with the specified size (removing margins from image if needed).

+--
BufferedImage image = ImageUtils.read(new File("image.jpg"));
BufferedImage imageResized = ImageUtils.resizeToFill(IMAGE, 300, 300);
+--


* Rotate
	
	Rotates an image specifying the angle of rotation in degrees.

+--
BufferedImage image = ImageUtils.read(new File("image.jpg"));
BufferedImage imageRotated = ImageUtils.rotate(IMAGE, 90);
+--


* Flip
	
	Flips an image horizontally.

+--
BufferedImage image = ImageUtils.read(new File("image.jpg"));
BufferedImage imageFlipped = ImageUtils.flipHorizontally(image);
+--

	Flips an image vertically.

+--
BufferedImage image = ImageUtils.read(new File("image.jpg"));
BufferedImage imageFlipped = ImageUtils.flipVertically(image);
+--


#parse("${folderSiteResourcesParent}/footer.apt.vm")
